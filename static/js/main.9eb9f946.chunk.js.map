{"version":3,"sources":["icons/039-tent.svg","icons/010-bonfire.svg","icons/009-binoculars.svg","contexts/MyContextProvider.js","url_config.js","components/Form.js","components/Map.js","components/Description.js","components/Location.js","components/App.js","Main.js","index.js"],"names":["module","exports","__webpack_require__","p","MyContext","React","createContext","MyContextProvider","props","_useState","useState","_useState2","Object","slicedToArray","pointId","setPointId","_useState3","_useState4","redirect","setRedirect","_useState5","_useState6","saveInHistory","setSaveInHistory","_useState7","_useState8","mode","setMode","_useState9","_useState10","data","setData","state","switchMode","react_default","a","createElement","Provider","value","children","config","url","API_URL","Form","context","useContext","className","onSubmit","e","preventDefault","URLSearchParams","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","FormData","target","Symbol","iterator","next","done","pair","append","err","return","fetch","method","headers","Content-Type","body","then","res","console","log","action","readOnly","type","step","name","id","lon","lat","htmlFor","required","placeholder","ol","require","iconMapping","camping","bonfire","view","viewPoint","Map","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this2","extraLayer","layer","Vector","source","features","featuresLayer","map","refs","mapContainer","layers","Tile","OSM","View","center","proj","fromLonLat","zoom","on","event","forEachFeatureAtPixel","pixel","feature","get","newPath","react_router","to","coord","toLonLat","coordinate","setState","coords","newFeature","Feature","geometry","geom","Point","push","setSource","prevProps","prevState","prevContext","_this3","json","points","forEach","icon","style","Icon","opacity","scale","src","iconStyle","Style","image","localisation","iconFeature","description","rating","setStyle","catch","error","ref","components_Form","Component","contextType","Description","reviews","setReviews","pointData","setPointData","useEffect","find","onClick","rev","title","dataForm","min","max","Location","pathPointId","location","pathname","split","history","components_Map","components_Description","App","switchText","react_router_dom","path","component","Main","contexts_MyContextProvider","components_App","ReactDOM","render","src_Main","document","getElementById"],"mappings":"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","file":"static/js/main.9eb9f946.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/039-tent.ebd03a54.svg\";","module.exports = __webpack_public_path__ + \"static/media/010-bonfire.21b76057.svg\";","module.exports = __webpack_public_path__ + \"static/media/009-binoculars.6b6a714c.svg\";","import React, { useState } from 'react'\nexport const MyContext = React.createContext({})\n\nfunction MyContextProvider(props) {\n    const [pointId, setPointId] = useState(null);\n    const [redirect, setRedirect] = useState(null);\n    const [saveInHistory, setSaveInHistory] = useState(false);\n    const [mode, setMode] = useState('explore');\n    const [data, setData] = useState(null);\n\n    const switchMode = () => {\n        const newMode = (mode === 'explore') ? 'edit' : 'explore';\n        setMode(newMode);\n    };\n\n    const state = {\n        pointId,\n        setPointId,\n        redirect,\n        setRedirect,\n        mode,\n        switchMode,\n        data,\n        setData,\n        saveInHistory,\n        setSaveInHistory\n    }\n    return (\n        <MyContext.Provider value={state}>\n            {props.children}\n        </MyContext.Provider>\n    )\n\n}\nexport default MyContextProvider\n","\nconst prod = {\n    url: {\n        API_URL: 'https://db-truso-map-space.herokuapp.com'\n    }\n};\nconst dev = {\n    url: {\n        API_URL: 'http://localhost:8000'\n    }\n};\nexport const config = process.env.NODE_ENV === 'development' ? dev: prod;","import React, { useContext } from 'react';\nimport { config } from '../url_config'\nimport { MyContext } from '../contexts/MyContextProvider';\nconst url = config.url.API_URL\n\n\nfunction Form(props) {\n\n    const context = useContext(MyContext);\n    const postPoint = (e) => {\n        e.preventDefault();\n\n        const data = new URLSearchParams();\n        for (const pair of new FormData(e.target)) {\n            data.append(pair[0], pair[1]);\n        }\n\n        fetch(url + \"/api/points\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: data\n        })\n            .then((res) => {\n                console.log('new point posted');\n                context.setData(null);\n            })\n    }\n\n    return (\n        context.mode === 'explore' ? '' :\n            <div>\n                <form className=\"container\" onSubmit={postPoint} action=\"http://localhost:8000/api/points\" method=\"post\" >\n\n                    <div className=\"flexcontainer\">\n                        <h3>Add new location  </h3>\n                        <input className=\"d-none\" readOnly type=\"number\" step=\"any\" name=\"lon\" id=\"lon\" value={props.lon}></input>\n                        <input className=\"d-none\" readOnly type=\"number\" step=\"any\" name=\"lat\" id=\"lat\" value={props.lat}></input>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm\">\n                            <label htmlFor=\"name\">Name:</label>\n                            <input required className=\"form-control input-sm\" placeholder=\"place name\" type=\"text\" name=\"name\" id=\"name\"></input>\n                        </div>\n                        <div className=\"col-sm\">\n                            <label htmlFor=\"description\">Description:</label>\n                            <input className=\"form-control input-sm\" placeholder=\"place decription\" type=\"text\" name=\"description\" id=\"description\"></input>\n                        </div>\n                        <div className=\"col-sm\">\n                            <label htmlFor=\"type\">Select type:</label>\n                            <select className=\"form-control input-sm\" id=\"type\" name=\"type\">\n                                <option>camping</option>\n                                <option>bonfire</option>\n                                <option>view</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"flexcontainer\">\n                        <button type=\"submit\" className=\"btn btn-dark btn-bg\">Add to the map</button>\n                    </div>\n                </form>\n            </div >\n\n\n    )\n}\n// className=\"d-none\"\n// action=\"http://localhost:8000/api/points\" method=\"post\"\nexport default Form;","import React from 'react';\n\nimport Form from './Form';\n\nimport camping from '../icons/039-tent.svg';\nimport bonfire from '../icons/010-bonfire.svg';\nimport viewPoint from '../icons/009-binoculars.svg';\n\nimport { Redirect } from 'react-router-dom';\n\n\nimport { MyContext } from '../contexts/MyContextProvider';\n\nimport { config } from '../url_config'\n\nconst url = config.url.API_URL\n\nconst ol = require('openlayers');\nrequire('openlayers/css/ol.css');\n\nconst iconMapping = {\n    camping: camping,\n    bonfire: bonfire,\n    view: viewPoint\n};\n\nclass Map extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = ({\n            lon: 17.862083241832443,\n            lat: 59.30184823106963\n        });\n        // console.log('map constructor');\n    }\n    componentWillUnmount() {\n        // console.log('map is going to unmount!');\n    }\n\n    componentDidMount() {\n        // console.log('map did mount');\n        const extraLayer = new ol.layer.Vector({\n            source: new ol.source.Vector({\n                features: []\n            })\n        });\n        const featuresLayer = new ol.layer.Vector({\n            source: new ol.source.Vector({\n                features: []\n            })\n        });\n\n        const map = new ol.Map({\n            target: this.refs.mapContainer, //change to createRef API!!\n            layers: [\n                new ol.layer.Tile({\n                    source: new ol.source.OSM()\n                }),\n                extraLayer,\n                featuresLayer\n            ], view: new ol.View({\n                //later check for route and get the id from the localisation\n                center: ol.proj.fromLonLat([this.state.lon, this.state.lat]),\n                zoom: 11,\n            })\n        });\n        const handleMapClick = (event) => {\n            ///getting pointid of the clicked feature ///\n            if (this.context.mode === 'explore') {\n                // console.log('click!');\n                let pointId = null;\n                this.state.map.forEachFeatureAtPixel(event.pixel,\n                    feature => {\n                        console.log(feature.get('id'));\n                        pointId = feature.get('id') || null;\n                    });\n\n                const newPath = pointId === null ? \"/\" : \"/\" + pointId;\n                // console.log('Map handleMapClick setNewPath', newPath)\n                this.context.setSaveInHistory(true);\n                this.context.setRedirect(<Redirect to={newPath}></Redirect>)\n            } else if (this.context.mode === 'edit') {\n                ///////drawing a point/////////\n                const coord = ol.proj.toLonLat(event.coordinate);\n                console.log(coord);\n                this.setState({\n                    lon: coord[0],\n                    lat: coord[1]\n                });\n\n                const features = [];\n\n                const coords = event.coordinate;\n                const newFeature = new ol.Feature({\n                    geometry: new ol.geom.Point(coords)\n                })\n\n                features.push(newFeature);\n\n                this.state.extraLayer.setSource(\n                    new ol.source.Vector({\n                        features: features\n                    })\n                );\n            }\n        }\n        map.on('click', handleMapClick);\n\n        this.setState({\n            map: map,\n            extraLayer: extraLayer,\n            featuresLayer: featuresLayer\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, prevContext) {\n        // console.log('map componentdidupdate');\n        // console.log(prevState);\n        // console.log(this.context);\n\n        if (this.context.data === null) {\n            // console.log('updating data');\n            fetch(url + '/api/points')\n                .then(res => res.json())\n                .then(data => {\n                    const features = [];\n                    data.points.forEach((e) => {\n                        const icon = new ol.style.Icon({\n                            opacity: 1,\n                            scale: 0.05,\n                            src: iconMapping[e.type]\n                        });\n\n                        const iconStyle = new ol.style.Style({\n                            image: icon\n                        });\n\n                        const coords = ol.proj.fromLonLat(e.localisation);\n                        const iconFeature = new ol.Feature({\n                            id: e.id,\n                            geometry: new ol.geom.Point(coords),\n                            name: e.name,\n                            description: e.description,\n                            rating: e.rating\n                        });\n                        iconFeature.setStyle(iconStyle);\n                        features.push(iconFeature);\n                    })\n\n                    this.state.featuresLayer.setSource(\n                        new ol.source.Vector({\n                            features: features\n                        })\n                    );\n                    this.context.setData(data);\n                })\n                .catch(error => console.log(error));\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div ref=\"mapContainer\" id=\"mapContainer\"></div>\n                <Form lon={this.state.lon} lat={this.state.lat}></Form>\n            </div>\n        );\n    }\n}\n\nMap.contextType = MyContext;\nexport default Map;","import React, { useState, useContext, useEffect } from 'react';\nimport { config } from '../url_config'\nimport { MyContext } from '../contexts/MyContextProvider';\nconst url = config.url.API_URL\n\nfunction Description(props) {\n    const context = useContext(MyContext);\n\n    const [reviews, setReviews] = useState('');\n    const [pointData, setPointData] = useState(null);\n\n    useEffect(() => {\n        setReviews('');\n        if (context.data) {\n            // console.log('Description use effetct, generating pointData, pointId', context.pointId);\n            // console.log('pathname', window.location.pathname);\n            const pointData = context.data.points.find(e =>\n                e.id === context.pointId);\n            setPointData(pointData);\n        }\n    }, [context.data, context.pointId]);\n\n    const fetchReviews = () => {\n        console.log('Description fetch reviews');\n        //get request to api/points/:id\n        fetch(url + \"/api/points/\" + context.pointId)\n            .then(res => res.json())\n            .then(res => {\n                console.log(res.rev)\n                const rev = res.rev.map(e => {\n                    return (\n                        <div className=\"flexcontainercolumn\">\n                            <br></br>\n                            <h5>{e.title}</h5>\n                            <p> {e.description} </p>\n                            <h5>rated: {e.rating}</h5>\n                        </div>\n                    )\n                })\n                setReviews(rev);\n            });\n    }\n\n    const submitReview = (e) => {\n        e.preventDefault();\n        const dataForm = new URLSearchParams();\n        for (const pair of new FormData(e.target)) {\n            dataForm.append(pair[0], pair[1]);\n        }\n\n        fetch(url + \"/api/points/\" + context.pointId, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: dataForm\n        })\n            .then(() => {\n                context.setData(null);\n            });\n    }\n\n    return (\n        (!pointData || context.mode === 'edit') ?\n            '' :\n            <div className=\"flexcontainercolumn\">\n                <h1>\n                    {pointData.name}\n                </h1>\n                <p>\n                    {pointData.description}\n                    <br />\n                    rating: {pointData.rating}\n                </p>\n                <button type=\"click\" onClick={fetchReviews} className=\"btn btn-dark btn-sm\">Show reviews</button>\n\n                {reviews}\n\n                <form className=\"container\" onSubmit={submitReview}>\n                    <div className=\"row\">\n                        <div className=\"col-sm\">\n                            <label htmlFor=\"title\">Title:</label>\n                            <input className=\"form-control input-sm\" placeholder=\"title\" required name=\"title\" id=\"title\"></input>\n                        </div>\n                        <div className=\"col-sm\">\n                            <label htmlFor=\"description\">Description:</label>\n                            <input className=\"form-control input-sm\" placeholder=\"description\" name=\"description\" id=\"description\"></input>\n                        </div>\n                        <div className=\"col-sm\">\n                            <label htmlFor=\"rating\">Rating:</label>\n                            <input className=\"form-control input-sm\" placeholder=\"1-10\" required min=\"1\" max=\"10\" name=\"rating\" id=\"rating\" type=\"number\"></input>\n                        </div>\n                    </div>\n                    <div className=\"flexcontainer\">\n                        <button type=\"submit\" className=\" btn btn-dark btn-bg\">Review</button>\n                    </div>\n                </form>\n\n            </div>\n\n    )\n}\n\nexport default Description;","import React, { useContext, useEffect } from 'react';\nimport Map from './Map';\nimport Description from './Description';\nimport { MyContext } from '../contexts/MyContextProvider';\n\nfunction Location(props) {\n    const context = useContext(MyContext);\n\n    useEffect(() => {\n        // console.log('Location useEffect pathname was changed to', props.location.pathname);\n        const pathPointId = props.location.pathname.split('/')[1] || null;  //change to regex\n        if(context.saveInHistory){\n            console.log('saving in the history');\n            props.history.push(props.location.pathname);\n            context.setSaveInHistory(false);\n        };\n        if (context.pointId !== pathPointId) {\n            // console.log('Location, set Point Id', pathPointId);\n            context.setPointId(pathPointId);\n        }\n    }, [props.location.pathname])\n    \n\n    return (\n        <div>\n            <Map></Map>\n            <Description></Description>\n        </div>\n    );\n}\n\nexport default Location;","import React, { useContext } from 'react';\n\nimport Location from './Location';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport { MyContext } from '../contexts/MyContextProvider';\n\n\nfunction App() {\n  const context = useContext(MyContext);\n\n  const switchText = (context.mode === 'explore') ? 'Edit map' : 'Explore';\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <nav className=\"navbar navbar-dark bg-dark\">\n          <h1 className=\"text-light\">\n            Your Map Space\n          </h1>\n          <button id=\"switch modes\" onClick={context.switchMode}>{switchText}</button>\n        </nav>\n        {context.redirect}\n        <Route path=\"/\" component={Location} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport MyContextProvider from './contexts/MyContextProvider';\nimport App from './components/App';\n\n\nfunction Main() {\n\n    return (\n        <MyContextProvider>\n            <App></App>\n        </MyContextProvider>\n\n    );\n}\n\nexport default Main;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}